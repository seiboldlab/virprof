
with Stage("classify"):
    rule blast_classify:
        message: "Classifying {input.blast7}"
        input:
            coverage = "{:prev:}/{:target:}.coverage",
            blast7 = "{:prev:}/{:target:}.blast7",
            ncbi_nodes = "{:prev:}/{:target:}.NCBI.nodes.dmp",
            ncbi_names = "{:prev:}/{:target:}.NCBI.names.dmp"
        output:
            result = "{:this:}/{target}.virus.csv"
        log:
                     "{:this:}/{target}.log"
        params:
            ncbi_dir = lambda wc, input: os.path.dirname(input.ncbi_nodes)
        threads:
            1
        shell:
            "./rules/classify.py"
            " --out {output.result}"
            " {input.blast7}"
            " {input.coverage}"
            " --ncbi-taxonomy {params.ncbi_dir}"
            " --exclude 'cellular organisms'"
            " >{log} 2>&1"

    rule collect_all:
        input:
            "{:this:}/{:targets:}.virus.csv"
        output:
            touch("{:this:}/all_targets.stamp")
