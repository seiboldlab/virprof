name: Main Tests

on:
 push:
   branches:
     - master
 pull_request:
   branches:
     - master

jobs:
  build-linux:
    strategy:
      max-parallel: 5
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    ## SETUP ##
    - uses: actions/checkout@v2
      with:
        path: virprof
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Fix Github Conda Permissions on OSX
      if: matrix.os == 'macos-latest'
      run: |
        sudo chown -R $USER $CONDA
    - name: Set up Biconda & Mamba
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        export PATH=$CONDA/bin:$PATH
        conda config --add channels defaults
        conda config --add channels bioconda
        conda config --add channels conda-forge
        conda install mamba

    ## LINT ##
    - name: Lint Python with black
      run: |
        mamba install black
        black --check --diff .
    - name: Lint Python with flake8
      run: |
        mamba install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 virprof --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. black will have made line length 88
        # also disable E203 (space before :) since that's how black likes it
        flake8 virprof --count --exit-zero --max-complexity=15 --ignore=E203 \
          --max-line-length=88 --statistics

    ## INSTALL ##
    - name: Install YMP
      run: |
        mamba env update --file virprof/environment.yml --name base
    - name: Setup pipeline with test data
      run: |
        ./virprof/test_data/install_testdata.sh
    - name: Install Python Env
      run: |
        ymp env list virprof_\*
        ymp env install virprof_py -vvv
    - name: Test Python with pytest
      run: |
        ymp env run virprof_py mamba install pytest
        ymp env run virprof_py pytest

    ## DRY RUNS ##
    - name: Run pipeline dry-run rnaseq salmon selective alignment
      run: |
        ymp make -n test.ref_hg38gtest.rnaseq_salmon
    - name: Run pipeline dry-run rnaseq star + salmon
      run: |
        ymp make -n test.ref_hg38gtest.rnaseq_star_salmon
    - name: Run pipeline dry-run rnaseq star + rsem
      run: |
        ymp make -n test.ref_hg38gtest.rnaseq_star_rsem
    - name: Run pipeline dry-run pathogen
      run: |
        ymp make -n test.ref_hg38gtest.rnaseq_salmon.pathogen

    ## INSTALL ENVS ##
    - name: Run pipeline software install
      run: |
        ymp env prepare \
        test.ref_hg38gtest.rnaseq_salmon \
        test.ref_hg38gtest.rnaseq_star_salmon \
        test.ref_hg38gtest.rnaseq_star_rsem \
        test.ref_hg38gtest.rnaseq_salmon.pathogen

    ## RUN ##
    - name: Run pipeline analysis rnaseq salmon selective alignment
      run: |
        ymp make test.ref_hg38gtest.rnaseq_salmon -j8
        ls -l test.rnaseq_salmon test.rnaseq_salmon
    - name: Run pipeline analysis rnaseq star + salmon
      run: |
        ymp make test.ref_hg38gtest.rnaseq_star_salmon -j8
        ls -l test.rnaseq_salmon test.rnaseq_star_salmon
    - name: Run pipeline analysis rnaseq star + rsem
      run: |
        ymp make test.ref_hg38gtest.rnaseq_star_rsem -j8
        ls -l test.rnaseq_salmon test.rnaseq_star_rsem
    - name: Run pipeline analysis pathogen
      run: |
        ymp make test.ref_hg38gtest.rnaseq_salmon.pathogen -j8
        ls -l test.rnaseq_salmon test.rnaseq_salmon.pathogen

    ## LOG ##
    - name: Save pipeline reports
      uses: actions/upload-artifact@v2
      with:
        name: results-${{ matrix.os }}
        path: reports/
        # Note: Not saving the actual test.generic directory because
        # it is a symlink and actions/upload-artifact@v2 has problems
        # with symlinks.
